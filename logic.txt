Block-Breaking Game JavaScript Code Explanation
Overview
This script creates a block-breaking game using vanilla JavaScript. The game features a paddle (user), a ball, and several blocks that the ball can hit. The goal is to break all the blocks by hitting them with the ball.

Key Components
1. Variables and Constants
grid: The container element where the game will be rendered.

scoreDisplay: The element displaying the current score.

blockWidth, blockHeight: Dimensions of each block.

ballDiameter: Diameter of the ball.

boardWidth, boardHeight: Dimensions of the game board.

xDirection, yDirection: Direction and speed of the ball's movement.

userStart: Initial position of the paddle (user).

currentPosition: Current position of the paddle.

ballStart: Initial position of the ball.

ballCurrentPosition: Current position of the ball.

timerId: ID for the interval timer controlling the ball's movement.

score: The player's current score.

gameRunning: Boolean flag indicating whether the game is running or not.

2. Block Class
The Block class defines the properties of each block, including its position on the board. Each block is represented by its bottom-left, bottom-right, top-right, and top-left coordinates.

3. Blocks Array
An array of Block objects is created to represent all the blocks on the game board. Each block is positioned in a grid pattern.

4. Adding Blocks to the DOM
The addBlocks function creates div elements for each block and positions them according to their coordinates. These div elements are then added to the grid.

5. Adding User (Paddle)
The user is represented by a div with the class user. It is added to the grid, and its position is updated using the drawUser function.

6. Adding Ball
The ball is represented by a div with the class ball. It is added to the grid, and its position is updated using the drawBall function.

7. Moving the Paddle
The moveUser function handles paddle movement based on keyboard inputs (ArrowLeft and ArrowRight). It updates the paddle's position and redraws it.

8. Drawing Functions
drawUser: Updates the paddle's position on the screen.
drawBall: Updates the ball's position on the screen.
9. Moving the Ball
The moveBall function updates the ball's position based on its direction and speed. It also checks for collisions with blocks, walls, and the paddle.

10. Collision Detection
Block Collision: Checks if the ball has hit a block and updates the score if it does.
Wall Collision: Changes the ball's direction if it hits the walls of the game board.
User Collision: Changes the ball's direction if it hits the paddle.
Game Over: Ends the game if the ball falls below the paddle.
11. Changing Ball Direction
The changeDirection function updates the ball's direction when it hits a block, wall, or paddle.

12. Start/Stop Game Button
The startStopBtn element controls the game's start and stop functionality. It toggles the game state and updates the button text accordingly. When starting the game, it resets the ball and paddle positions, re-adds blocks, and starts the ball movement.

